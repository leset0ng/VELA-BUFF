<import name="topbar" src="@components/topbar/topbar.ux"></import>
<import name="betterImg" src="@components/betterImage/betterImage.ux"></import>
<template>
  <div class="page">
    <scroll scroll-y="true" class="content">
      <!-- 功能没做因为抓包抓不明白 -->
      <!-- <img src="/common/inspect.png" onclick="inspect" style="position:absolute;top:342px;right:0px" if="{{canInspect}}"/> -->
      <betterImg url="{{img}}"
        wapperStyle="border-radius: 20px;background-color: #434343;width: 336px;height: 342px;justify-content: flex-start;"
        imgstyle="object-fit: cover;width: 336px;top:-14px;border-radius: 20px"></betterImg>
      <text static class="name">{{ name }}</text>
      <text static class="price">¥{{ price }}</text>
      <text  class="nameTag" if="{{nameTag}}">{{nameTag}}</text>
      <text static class="itemInfo" if="{{paintindex||paintseed}}">
        图案模板:{{ paintindex }} 皮肤编号:{{ paintseed }}
      </text>
      <div static class="card" if="{{exterior}}">
        <div static class="progress" if="{{exterior}}">
          <div static class="progress-1"></div>
          <div static class="progress-2"></div>
          <div static class="progress-3"></div>
          <div static class="progress-4"></div>
          <div static class="progress-5"></div>
          <div static class="progress-inner" style="left: {{exterior*316}}px"></div>
        </div>
        <text class="exterior" if="{{exterior}}">磨损:{{ exterior }}</text>
      </div>
      <text class="updateTime" if="{{updateTime}}">检视图游戏版本:{{ updateTime }}</text>
      <div class="card" if="{{stickers.length}}">
        <text class="title">包含贴纸</text>
        <div class="stickers" for="{{stickers}}">
          <betterImg url="{{ $item.img }}" wapperStyle="min-width: 75px;height: 100%;margin-right: 10px;"></betterImg>
          <text class="title">
            <span>{{ $item.name }}</span>
            <span class="stickerWear">{{`\n磨损:${$item.wear}% (${$item.sell_reference_price}¥)`}}</span>
          </text>
        </div>
      </div>
      <text class="desc" if="{{sellerDesc}}">卖家描述:{{sellerDesc}}</text>
      <text class="desc" if="{{tags}}">
        <block for="{{tags}}">
          <span class="tag {{ $item.class }}" if="{{$item.name!==undefined}}">{{ $item.name+" "}}</span>
        </block>
      </text>
      <text class="desc" if="{{desc}}">
        <span for="{{desc}}" style="color:{{$item.color}};{{$item.style}}">{{ $item.value }}</span>
      </text>
    </scroll>
    <topbar title="{{title}}"></topbar>
  </div>
</template>

<script>
import buffImg2 from "../../buff/buffImg2"
import {cacheText,getCacheText}from "@utils/textCache"
export default {
  private: {
    title: "物品详情",
    img: "",
    item: {},
    goodsInfo: {},
    exterior: 0,
    price: 0,
    name: "",
    paintseed: "",
    paintindex: "",
    updateTime: "",
    desc: [],
    nameTag: "",
    tags: [],
    stickers: [],
    sellerDesc:""
  },
  onInit() {
    this.item = globalThis.itemToshow
    this.goodsInfo = globalThis.goodsToshow
    this.title = this.goodsInfo.short_name
    this.name = this.goodsInfo.name
    this.sellerDesc=this.item?.description
    const imgSize=globalThis.settingsManager.get("cacheHighQualityImage")?[850,850]:[336,850]
    this.img = buffImg2(
      this.item?.asset_info?.info?.inspect_url ?? this.goodsInfo.icon_url,
      imgSize[0],imgSize[1]
    )
    this.exterior = this.item?.asset_info?.paintwear

    if (this.item)
      (async () => {
        console.log(this.item)
        let desc
        try {
          desc = await globalThis.buff.getItemDesc(this.item)
          if (globalThis.settingsManager.get("saveCache")) cacheText(JSON.stringify(desc), this.item?.goods_id)
          console.log(globalThis.settingsManager.get("saveCache"))
        } catch (error) {
          console.log(error)
          desc=JSON.parse(await getCacheText(this.item?.goods_id))
        }
        console.log(desc)
        this.updateTime = desc?.steam_asset_info?.game_release_date
        this.desc = descPraser(desc?.descriptions)
        this.nameTag = desc?.fraudwarnings
      })()

    this.price = this.item?.price ?? this.goodsInfo.sell_min_price

    this.paintseed = this.item?.asset_info?.info?.paintseed
    this.paintindex = this.item?.asset_info?.info?.paintindex

    this.tags.push({ name: this.goodsInfo?.tags?.type?.localized_name })
    this.tags.push({ name: this.goodsInfo?.tags?.rarity?.localized_name, class: `rarity_${this.goodsInfo?.tags?.rarity?.internal_name?.split("_")[0]}` })
    this.tags.push({ name: this.goodsInfo?.tags?.quality?.localized_name })
    this.tags.push({ name: this.goodsInfo?.tags?.exterior?.localized_name, class: `color_${this.goodsInfo?.tags?.exterior?.id - 509}` })

    this.stickers = this.item?.asset_info?.info?.stickers.map((item) => {
      return { ...item, img: buffImg2(item.img_url, 75, 56),wear:((1-item.wear) * 100).toFixed(2) }
    })
  }, onDestroy() {
    global.runGC()
  },
  async inspect() {
    console.log(await globalThis.buff.inspect(this.item))
  }
}
function descPraser(desc) {
  const result = []
  desc?.reverse()
  desc?.forEach((item) => {
    if (item.name === "sticker_info"||item.name === "keychain_info") return
    if (item.name === "blank") return result.length > 0 && result.push({value: "\n\n"})
    //解析<i></i>标签
    const color = "#" + (item.color ?? "c2c2c2")
    item.value = item.value.replaceAll("<b>","").replaceAll("</b>",""); // 补充赋值操作
    item.value += "\n"
    if (item.value.includes("<i>")) {
      const m = item.value.matchAll(/<i>(.*?)<\/i>/g)
      for (const i of [...m].reverse()) {
        const values = item.value.replace(i[0], "__match__").split("__match__")
        item.value = values[1]
        result.push({value: i[1], color, style: "font-style: italic;"}, {value: values[0], color})
      }
      result.push({value: item.value, color})
    } else {
      result.push({value: item.value, color})
    }
  })
  result.reverse()
  return result
}
</script>

<style>
@import url("../../buff/colors.css");
.progress-1 .progress-2 .progress-3 .progress-4 .progress-5 .progress {
  height: 8px;
}
.progress {
  width: 100%;
  position: relative;
  border-radius: 20px;
  background-color: #262626;
}
.exterior {
  font-size: 20px;
  padding: 0px;
  background-color: transparent;
}
.desc {
  font-size: 20px;
}
.title{
  font-size: 20px;
  color: #ffffff;
  background-color: transparent;
  padding: 0px;
  margin: 0px;
}
.progress-inner {
  height: 20px;
  top: 0px;
  color: #ffffff80;
  width: 4px;
}
.stickers{
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  margin-top: 10px;

}
.stickerName {
  font-size: 20px;
  color: white;
}
.stickerWear{
  font-size: 20px;
  color: #9E9E9E;
  text-align: end;
}
.imageWrapper {
  width: 336px;
  height: 342px;
}
text .card {
  font-size: 40px;
  width: 336px;
  background-color: #262626;
  padding: 10px;
  margin-top: 10px;
  border-radius: 20px;
  flex-direction: column;
}
.page {
  position: absolute;
  background-color: black;
  width: 336px;
  height: 480px;
  align-items: center;
}
.content {
  padding: 10px;
  padding-top: 60px;
  width: 100%;
  height: 100%;
  flex-direction: column;
  align-items: center;
}
.itemInfo {
  color: #ffffff;
  font-size: 20px;
}
.menu {
  position: absolute;
  background-color: black;
  width: 100%;
  height: 100%;
  padding: 10px;
  padding-top: 60px;
  align-items: center;
  transform: translateY(-100%);
}
.placeholder {
  width: 1px;
  position: absolute;
  top: 60px;
}
.menu-item {
  position: relative;
  height: 80px;
  width: 100%;
  background-color: #262626;
  margin-top: 10px;
  padding: 10px;
  border-radius: 24px;
  justify-content: space-between;
  align-items: center;
}
.updateTime {
  font-size: 20px;
  color: #888888;
}
.name {
  font-size: 30px;
  color: #ffffff;
}
.price {
  font-size: 25px;
  color: #ffc641;
}
.nameTag{
  font-size: 20px;
  color: #ffc641;
}

.rarity_common{
    color: #b0c3d9
}

.rarity_rare{
    color: #4b69ff
}

.rarity_legendary{
    color: #d32ce6
}

.rarity_mythical{
    color: #8847ff
}

.rarity_ancient{
    color: #eb4b4b
}

.rarity_contraband{
    color: #e4ae39
}
.color_1{
    color: #008000
}
.color_2{
    color: #5cb85c
}
.color_3{
    color: #f0ad4e
}
.color_4{
    color: #d9534f
}
.color_5{
    color: #993a38
}
</style>